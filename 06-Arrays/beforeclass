#List:
#1.	The list can store the value of different types.
#2.	The list cannot handle the direct arithmetic operations.
#3.	We need to import the array before work with the array.
#4.	The lists are less compatible than the array to store the data.
#5.	It consumes a large memory.
#6.	It is suitable for storing the longer sequence of the data item.
#7.	We can print the entire list using explicit looping.
#8.	It can be nested to contain different types of elements.


#array:
#1 It can only consist of value of same type.
#2 It can directly handle arithmetic operations.
#3 The lists are the build-in data structure so we don't need to import it.
#4 An array are much compatible than the list.
#5 It is a more compact in memory size comparatively list.
#6 It is suitable for storing shorter sequence of data items.
#7 We can print the entire list without using explicit looping.
#8 It must contain either all nested elements of same size.

import array as arr
import random
arr1 = [3,7,1,0,4]
arr2 = [[2,3],[7,1],[0,4]]
arr3 = [7 for i in range(5)]
arr4 = [i for i in range(1,10)]
arr5 = [i*2 for i in range(1,10)]
arr6 = [random.randint(1,20) for i in range(10)]
arr7 = [[] for i in range(5)]
arr8 = [[1 for i in range(2)] for j in range(4)]
arr9 = [[random.randint(1,20) for i in range(3)] for j in range(5)]
arr10=[4,0,3]
arr11=[0 for i in range(51)]
arr12=[i for i in range(1,31)]
arr13=[random.randint(0,1) for i in range(21)]
arr14=[
    [False,False],
    [False,False],
    [False,False],
    [False,False],
    [False,False],
]

print(arr6)
